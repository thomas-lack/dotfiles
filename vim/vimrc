execute pathogen#infect()

" Vim UI settings
set showmode				" display current mode
set number relativenumber	" show hybrid relative line numbers
set t_Co=256				" set 256 colors
set background=dark
colorscheme molokai

" Airline settings
let g:airline_theme='qwq'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif
" Airline symbols
let g:airline_symbols.space = "\ua0"
let g:airline_left_sep = 'ÓÇ∞'
let g:airline_left_alt_sep = 'ÓÇ±'
let g:airline_right_sep = 'ÓÇ≤'
let g:airline_right_alt_sep = 'ÓÇ≥'
let g:airline_symbols.branch = 'ÓÇ†'
let g:airline_symbols.readonly = 'ÓÇ¢'
let g:airline_symbols.linenr = '¬∂'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.maxlinenr = 'ÓÇ°'
let g:airline_symbols.crypt = 'üîí'
let g:airline_symbols.paste = 'œÅ'
let g:airline_symbols.paste = '√û'
let g:airline_symbols.paste = '‚à•'
let g:airline_symbols.spell = 'Íû®'
let g:airline_symbols.notexists = '‚àÑ'
let g:airline_symbols.whitespace = 'Œû'

" loose vi compatibility
set nocompatible

" turn on syntax highlighting
syntax on

" show an EOL ruler 
set ruler
set showcmd			" show partial commands in status line
					" and selected characters/lines in visual mode

" do not break words on linebreak and indent automatically if linebreaking in
" tags
set breakindent
set wrap linebreak nolist

" make vim try to detect file types and load plugins for them
filetype on
filetype plugin on
filetype indent on

" reload files changed outside vim
set autoread

" encoding is utf-8
set encoding=utf-8
set fileencoding=utf-8

" set unix line endings
set fileformat=unix
" when reading files try unix line endings then dos, use unix for new buffers
set fileformats=unix,dos

" screen will not be redrawn while running macros, registers or other
" non-typed comments
set lazyredraw

" indentation settings
set tabstop=2
set shiftwidth=2
set autoindent

" search settings
set hlsearch							" highlight search terms
set ignorecase							" case insensitive
nnoremap <CR> :noh<CR><CR>:<backspace>	" press enter to get rid of search
										" results

" scrolling
set scrolljump=5		" lines to scroll when cursor leaves the screen
set scrolloff=3			" minimum lines to keep above and below cursor

" set number format always to decimal
set nrformats=alpha

" Buffers
set hidden				" allow changing buffers with unsaved changes
" show buffer list by pressing F5, select number to change buffer
:nnoremap <F5> :buffers<CR>:buffer<Space>

" disable error sounds
set noerrorbells

" NERDtree
" automatically close vim if only NERDtree is opened
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
map <F2> :NERDTreeToggle<CR> 

" vim-javascript
let g:javascript_plugin_jsdoc = 1

" vim-jsdoc
let g:jsdoc_allow_input_prompt = 1
let g:jsdoc_input_description = 1
let g:jsdoc_underscore_private = 1
let g:jsdoc_enable_es6 = 1

" sytastic syntax checker settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
