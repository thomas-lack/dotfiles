Plug 'tpope/vim-surround'
Plug 'preservim/nerdtree'

" set clipboard as default register
set clipboard=unnamedplus,unnamed
set clipboard+=ideaput

" show hybrid relative line numbers
set number relativenumber

" set leader key
let mapleader = " "

" activate easymotion via AceJump and ideavim-easymotion plugins
set easymotion
let g:Easymotion_do_mapping = 0
map <leader><leader> <Plug>(easymotion-s)

" disable special keys
let g:C_Ctrl_j = "off"

" set alternative ESC key
imap jj <Esc>

" indentation settings
set tabstop=2				" the width of tabs is set to 2
set shiftwidth=2		" indents will have a width of 2
set softtabstop=2		" sets the # of columns for tabs
set expandtab				" expand tabs to spaces
set autoindent

" search settings
set hlsearch							" highlight search terms
set ignorecase						" case insensitive
" press enter to get rid of search results
nnoremap <CR> :nohlsearch<CR>
nnoremap n nzz
nnoremap N Nzz

" scrolling
set scrolljump=8		" lines to scroll when cursor leaves the screen
set scrolloff=3			" minimum lines to keep above and below cursor
noremap J 10jzz
noremap K 10kzz

" move line up/down
" nnoremap <A-j> :m .+1<CR>==
" nnoremap <A-k> :m .-2<CR>==

" remap zero to jump to first non-empty character in line
nnoremap 0 ^

" map ; to "write ; at end of line"
nnoremap ; A;<ESC>

" set number format always to decimal
set nrformats=alpha

" replace split buffer creation
:nmap <leader>v <Action>(SplitVertically)
:nmap <leader>h <Action>(SplitHorizontally)

" Split window navigation
nnoremap <C-l> <C-w>l
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k

" tab navigation
:nmap <Tab> <Action>(NextTab)
:nmap <S-Tab> <Action>(PreviousTab)

" disable error sounds
set visualbell
set noerrorbells

" bufkill settings
nnoremap <C-c> :BD<cr>				" map Ctrl-c to close the current buffer
:nmap <leader>q <Action>(CloseAllEditorsButActive)
:nmap <leader>x <Action>(CloseEditor)

" open fzf alternative
:nmap <leader>p <Action>(FileStructurePopup)
:nmap <leader>e <Action>(GotoNextError)
:nmap <leader>E <Action>(GotoPreviousError)
:nmap <leader>fw <Action>(FindInPath)
:nmap <leader>fu <Action>(FindUsages)
:nmap <leader>xi <Action>(ExtractInterface)
:nmap <D-I> <Action>(ActivateTerminalToolWindow)

" file browser
nnoremap <leader>1 :NERDTree<CR>
:nmap <leader>2 <Action>(SelectInProjectView)

" goto commands
:nmap gb <Action>(Back)
:nmap gf <Action>(GotoFile)
:nmap gc <Action>(GotoClass)
:nmap gs <Action>(GotoSymbol)
:nmap gi <Action>(GotoImplementation)
:nmap gp <Action>(FrameSwitchAction)

" activate AceJump as easymotion substitute
:nmap map <leader><leader> <Action>(AceAction)

" reformatting
" nnoremap <leader>c :action ReformatCode<CR>:action OptimizeImports<CR>
nnoremap <leader>c :action OptimizeImports<CR>:action ReformatWithPrettierAction<CR>
:nmap <leader>r <Action>(RenameElement)
:nmap <leader>R <Action>(ReplaceInPath)
:nmap <leader>i <Action>(Inline)
:nmap <leader>a <Action>(InspectCodeActionInPopupMenus)

" code folding
:nmap zf <Action>(CollapseRegion)
:nmap zd <Action>(ExpandRegion)
:nmap zs <Action>(CollapseAllRegions)
:nmap za <Action>(ExpandAllRegions)

" comments
:nmap <leader>/ <Action>(CommentByLineComment)
:vmap <leader>/ <Action>(CommentByLineComment)

" Greatest remap EVER!!
" Let me explain, this remap while in visiual mode
" will delete what is currently highlighted and replace it
" with what is in the register BUT it will YANK (delete) it
" to a VOID register. Meaning I still have what I originally had
" when I pasted. I don't loose the previous thing I YANKED!
vnoremap <leader>p "_dP

" display
:nmap <leader>V <Action>(ChangeView)

" code generator
" nnoremap <leader>g :action GenerateGetterAndSetter<CR>

" git commands
:nmap <leader>gg <Action>(CheckinProject)
:nmap <leader>vp <Action>(Vcs.Push)

" scratch files
:nmap <leader>b <Action>(NewScratchBuffer)
